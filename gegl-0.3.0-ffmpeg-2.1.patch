--- gegl-0.3.0/operations/workshop/external/ff-save.c.0000~	2014-02-21 03:12:40.000000000 +0100
+++ gegl-0.3.0/operations/workshop/external/ff-save.c	2014-03-08 22:54:46.112505998 +0100
@@ -568,7 +568,7 @@ open_video (Priv * p, AVFormatContext *
     }
 
   /* open the codec */
-  if (avcodec_open (c, codec) < 0)
+  if (avcodec_open2 (c, codec, NULL) < 0)
     {
       fprintf (stderr, "could not open codec\n");
       exit (1);
@@ -668,7 +668,7 @@ write_video_frame (GeglChantO *op,
       else
         {
           sws_scale(img_convert_ctx,
-                    p->tmp_picture->data,
+                    (const uint8_t* const*)p->tmp_picture->data,
                     p->tmp_picture->linesize,
                     0,
                     c->height,
@@ -769,26 +769,20 @@ tfile (GeglChantO *self)
      /*XXX: FOO p->audio_st = add_audio_stream (op, p->oc, p->fmt->audio_codec);*/
     }
 
-  if (av_set_parameters (p->oc, NULL) < 0)
-    {
-      fprintf (stderr, "Invalid output format propeters\n%s", "");
-      return -1;
-    }
-
-  dump_format (p->oc, 0, self->path, 1);
+  av_dump_format (p->oc, 0, self->path, 1);
 
   if (p->video_st)
     open_video (p, p->oc, p->video_st);
   if (p->audio_st)
     open_audio (p, p->oc, p->audio_st);
 
-  if (url_fopen (&p->oc->pb, self->path, URL_WRONLY) < 0)
+  if (avio_open (&p->oc->pb, self->path, AVIO_FLAG_WRITE) < 0)
     {
       fprintf (stderr, "couldn't open '%s'\n", self->path);
       return -1;
     }
 
-  av_write_header (p->oc);
+  avformat_write_header (p->oc, NULL);
 
   return 0;
 }
@@ -858,7 +852,7 @@ finalize (GObject *object)
             av_freep (&p->oc->streams[i]);
           }
 
-        url_fclose (&p->oc->pb);
+        avio_close (p->oc->pb);
         free (p->oc);
       }
       g_free (o->chant_data);
--- gegl-0.3.0/configure.ac.0006~	2014-03-08 17:00:45.392278206 +0100
+++ gegl-0.3.0/configure.ac	2014-03-08 17:00:45.412278206 +0100
@@ -904,7 +904,7 @@ AC_SUBST(LUA_LIBS)
 AC_ARG_WITH(libavformat,  [  --without-libavformat   build without libavformat support])
 
 if test "x$with_libavformat" != xno; then
-  PKG_CHECK_MODULES(AVFORMAT, libavformat >= 53.0.0 libavcodec >= 53.0.0,
+  PKG_CHECK_MODULES(AVFORMAT, libavformat >= 53.0.0 libavcodec >= 53.0.0 libavutil >= 0.28 libswscale >= 0.28,
     have_libavformat="yes",
     have_libavformat="no  (libavformat not found)")
   # verify the presence of the avformat.h header
